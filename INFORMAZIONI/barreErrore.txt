def add_error_box(x, y, xerr, yerr, xpos=1, ypos=-1):
    """
    Parameters
    ----------
    x : Array delle ascisse
    y : Array delle ordinate
    xerr : Array degli errori sulle x
    yerr : Array degli errori sulle y
    xpos : Ascissa del centro del mirino
        DESCRIPTION. The default is 1.
    ypos : Ordinata del centro del mirino
        DESCRIPTION. The default is -1.

    Returns
    -------
    None.

    """
    x_cross = np.median(xerr)  # 75 percentile per gli errori su x
    y_cross = np.median(yerr)  # 75 percentile per gli errori su y

    # Creare una Rectangle con le dimensioni degli errori sulle x e y
    error_box = patches.Rectangle((xpos - np.percentile(x_cross, 75), ypos - np.percentile(y_cross, 75)),
                                  2 * np.percentile(x_cross, 75), 2 * np.percentile(y_cross, 75),
                                  edgecolor='white', linewidth=2, facecolor='none', label='Incertezza al 75%')

    # Aggiungere la Rectangle al grafico
    plt.gca().add_patch(error_box)

    # Aggiungere linee rosse passanti per i punti medi dei lati del rettangolo
    x_left, y_mid = xpos - np.percentile(x_cross, 75), ypos
    x_right, y_mid = xpos + np.percentile(x_cross, 75), ypos
    plt.plot([x_left, x_right], [y_mid, y_mid], color='red', linestyle='-', linewidth=1.5)

    # Aggiungi piccole barrette agli estremi dei tratti
    plt.plot([x_left, x_left], [y_mid - 0.05, y_mid + 0.05], color='red', linestyle='-', linewidth=1)
    plt.plot([x_right, x_right], [y_mid - 0.05, y_mid + 0.05], color='red', linestyle='-', linewidth=1)

    x_mid, y_top = xpos, ypos + np.percentile(y_cross, 75)
    x_mid, y_bottom = xpos, ypos - np.percentile(y_cross, 75)
    plt.plot([x_mid, x_mid], [y_top, y_bottom], color='red', linestyle='-', linewidth=1.5)

    # Aggiungi piccole barrette agli estremi dei tratti
    plt.plot([x_mid - 0.05, x_mid + 0.05], [y_top, y_top], color='red', linestyle='-', linewidth=1)
    plt.plot([x_mid - 0.05, x_mid + 0.05], [y_bottom, y_bottom], color='red', linestyle='-', linewidth=1)



### VERSIONE SENZA LE SBARRETTE AGGIUNTIVE ALLA FINE !!!

def add_error_box(x, y, xerr, yerr, xpos=1, ypos=-1):
    """
    Parameters
    ----------
    x : Array delle ascisse
    y : Array delle ordinate
    xerr : Array degli errori sulle x
    yerr : Array degli errori sulle y
    xpos : Ascissa del centro del mirino
        DESCRIPTION. The default is 1.
    ypos : Ordinata del centro del mirino
        DESCRIPTION. The default is -1.

    Returns
    -------
    None.

    """
    x_cross = np.median(xerr)  # 75 percentile per gli errori su x
    y_cross = np.median(yerr)  # 75 percentile per gli errori su y

    # Creare una Rectangle con le dimensioni degli errori sulle x e y
    error_box = patches.Rectangle((xpos - np.percentile(x_cross, 75), ypos - np.percentile(y_cross, 75)),
                                  2 * np.percentile(x_cross, 75), 2 * np.percentile(y_cross, 75),
                                  edgecolor='white', linewidth=2, facecolor='none', label='Incertezza al 75%')

    # Aggiungere la Rectangle al grafico
    plt.gca().add_patch(error_box)

    # Aggiungere linee rosse passanti per i punti medi dei lati del rettangolo
    x_left, y_mid = xpos - np.percentile(x_cross, 75), ypos
    x_right, y_mid = xpos + np.percentile(x_cross, 75), ypos
    plt.plot([x_left, x_right], [y_mid, y_mid], color='red', linestyle='-', linewidth=1.5)

    x_mid, y_top = xpos, ypos + np.percentile(y_cross, 75)
    x_mid, y_bottom = xpos, ypos - np.percentile(y_cross, 75)
    plt.plot([x_mid, x_mid], [y_top, y_bottom], color='red', linestyle='-', linewidth=1.5)

